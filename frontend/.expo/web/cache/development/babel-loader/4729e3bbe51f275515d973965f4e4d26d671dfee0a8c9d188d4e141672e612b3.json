{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { colors } from \"../../utils/colors\";\nimport { sendMessage } from \"../../services/ai\";\nimport GoogleSignIn from \"../Auth/GoogleSignIn\";\nimport { generateReferralCode, generateUniqueCode } from \"../../utils/referralUtils\";\nimport { FALLBACK_QUESTIONS } from \"../../utils/chatQuestions\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatUI(_ref) {\n  var questionsBeforeLogin = _ref.questionsBeforeLogin,\n    showRefOffer = _ref.showRefOffer;\n  console.log('ChatUI initialized with:', {\n    questionsBeforeLogin: questionsBeforeLogin,\n    showRefOffer: showRefOffer\n  });\n  var isDev = process.env.NODE_ENV === 'development';\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    connectionError = _useState8[0],\n    setConnectionError = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    questionCount = _useState10[0],\n    setQuestionCount = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showLoginPrompt = _useState12[0],\n    setShowLoginPrompt = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    user = _useState14[0],\n    setUser = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    showExitConfirm = _useState16[0],\n    setShowExitConfirm = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    referralCode = _useState18[0],\n    setReferralCode = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    showRefModal = _useState20[0],\n    setShowRefModal = _useState20[1];\n  var listRef = useRef(null);\n  var usedQuestionIndicesRef = useRef(new Set());\n  var _useState21 = useState(null),\n    _useState22 = _slicedToArray(_useState21, 2),\n    error = _useState22[0],\n    setError = _useState22[1];\n  useEffect(function () {\n    return function () {\n      usedQuestionIndicesRef.current = new Set();\n    };\n  }, []);\n  var getRandomFallbackQuestion = function getRandomFallbackQuestion() {\n    console.log('Getting random question. Used indices:', Array.from(usedQuestionIndicesRef.current));\n    if (usedQuestionIndicesRef.current.size >= FALLBACK_QUESTIONS.length) {\n      console.log('All questions used, resetting tracking');\n      usedQuestionIndicesRef.current = new Set();\n    }\n    var randomIndex;\n    do {\n      randomIndex = Math.floor(Math.random() * FALLBACK_QUESTIONS.length);\n    } while (usedQuestionIndicesRef.current.has(randomIndex));\n    console.log('Selected question index:', randomIndex);\n    usedQuestionIndicesRef.current.add(randomIndex);\n    return FALLBACK_QUESTIONS[randomIndex];\n  };\n  useEffect(function () {\n    console.log('Processing showRefOffer:', showRefOffer);\n    if (showRefOffer) {\n      var generateInitialReferral = function () {\n        var _ref2 = _asyncToGenerator(function* () {\n          try {\n            var tempUserId = 'temp-' + Date.now();\n            var code = yield generateReferralCode(tempUserId);\n            console.log('Generated initial referral code:', code);\n            setReferralCode(code);\n            setShowRefModal(true);\n          } catch (error) {\n            console.error('Error generating initial referral code:', error);\n          }\n        });\n        return function generateInitialReferral() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      generateInitialReferral();\n    }\n  }, [showRefOffer]);\n  useEffect(function () {\n    console.log('State updated:', {\n      user: user ? _objectSpread(_objectSpread({}, user), {}, {\n        uid: user.uid\n      }) : null,\n      referralCode: referralCode,\n      showLoginPrompt: showLoginPrompt,\n      questionCount: questionCount,\n      showExitConfirm: showExitConfirm,\n      showRefModal: showRefModal\n    });\n  }, [user, referralCode, showLoginPrompt, questionCount, showExitConfirm, showRefModal]);\n  var LOGIN_PROMPT_THRESHOLD = isDev ? questionsBeforeLogin || 5 : 5;\n  useEffect(function () {\n    var initialQuestion = getRandomFallbackQuestion();\n    var welcomeMessage = {\n      id: Date.now(),\n      text: `Welcome! I'm here to help you achieve your goals. ${initialQuestion.text}`,\n      sender: 'bot',\n      isQuestion: true,\n      options: initialQuestion.options\n    };\n    setMessages([welcomeMessage]);\n  }, []);\n  useEffect(function () {\n    if (isDev) {\n      console.log('Development mode: Chat initialized');\n    }\n  }, []);\n  useEffect(function () {\n    if (questionCount >= LOGIN_PROMPT_THRESHOLD && !showLoginPrompt && !user) {\n      console.log(`Showing login prompt after ${questionCount} questions`);\n      setShowLoginPrompt(true);\n    }\n  }, [questionCount, showLoginPrompt, user]);\n  useEffect(function () {\n    var checkConnection = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch('http://localhost:4000/api/health');\n          if (!response.ok) throw new Error('Backend unavailable');\n          setConnectionError(false);\n        } catch (error) {\n          console.error('Connection check failed:', error);\n          setConnectionError(true);\n        }\n      });\n      return function checkConnection() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    checkConnection();\n    var interval = setInterval(checkConnection, 5000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  var handleSendMessage = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!input.trim() || loading) return;\n      try {\n        if (connectionError) {\n          throw new Error('Cannot connect to chat service');\n        }\n        setLoading(true);\n        var userMessage = {\n          id: Date.now(),\n          text: input,\n          sender: 'user'\n        };\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [userMessage]);\n        });\n        setInput('');\n        var result = yield sendMessage(input);\n        if (!result) {\n          throw new Error('No response received from server');\n        }\n        if (!result.text && !result.options) {\n          var fallbackQuestion = getRandomFallbackQuestion();\n          result.text = fallbackQuestion.text;\n          result.options = fallbackQuestion.options;\n        }\n        var botMessage = {\n          id: Date.now(),\n          text: result.text || \"I'm having trouble understanding. Could you rephrase that?\",\n          sender: 'bot',\n          isQuestion: typeof result.text === 'string' && (result.text.includes('?') || result.text.includes(\"I'd like to understand\")),\n          options: result.options || []\n        };\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [botMessage]);\n        });\n        if (botMessage.isQuestion) {\n          var newCount = questionCount + 1;\n          setQuestionCount(newCount);\n        }\n      } catch (error) {\n        console.error('Chat error:', error);\n        var _fallbackQuestion = getRandomFallbackQuestion();\n        console.log('Using fallback question:', _fallbackQuestion);\n        var errorMessage;\n        if (connectionError) {\n          errorMessage = 'Cannot connect to chat service. Please check your connection.';\n        } else if (error.message.includes('Empty response') || error.message.includes('No response')) {\n          errorMessage = _fallbackQuestion.text;\n        } else {\n          errorMessage = `I apologize for the confusion. ${_fallbackQuestion.text}`;\n        }\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [{\n            id: Date.now(),\n            text: errorMessage,\n            sender: 'bot',\n            isQuestion: true,\n            options: _fallbackQuestion.options\n          }]);\n        });\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSendMessage() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleQuickResponse = function () {\n    var _ref5 = _asyncToGenerator(function* (response) {\n      if (loading) return;\n      try {\n        setLoading(true);\n        var userMessage = {\n          id: Date.now(),\n          text: response,\n          sender: 'user'\n        };\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [userMessage]);\n        });\n        var result = yield sendMessage(response);\n        if (!result) {\n          throw new Error('No response received from server');\n        }\n        if (!result.text && !result.options) {\n          var fallbackQuestion = getRandomFallbackQuestion();\n          result.text = fallbackQuestion.text;\n          result.options = fallbackQuestion.options;\n        }\n        var botMessage = {\n          id: Date.now(),\n          text: result.text || \"I understand. Tell me more about that.\",\n          sender: 'bot',\n          isQuestion: typeof result.text === 'string' && (result.text.includes('?') || result.text.includes(\"I'd like to understand\")),\n          options: result.options || []\n        };\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [botMessage]);\n        });\n        if (botMessage.isQuestion) {\n          var newCount = questionCount + 1;\n          setQuestionCount(newCount);\n        }\n      } catch (error) {\n        console.error('Quick response error:', error);\n        var errorMessage;\n        var errorOptions;\n        var _fallbackQuestion2 = getRandomFallbackQuestion();\n        if (connectionError) {\n          errorMessage = 'Cannot connect to chat service. Please check your connection.';\n          errorOptions = [];\n        } else if (error.message.includes('Empty response') || error.message.includes('No response')) {\n          errorMessage = _fallbackQuestion2.text;\n          errorOptions = _fallbackQuestion2.options;\n        } else {\n          errorMessage = `That's an interesting perspective. ${_fallbackQuestion2.text}`;\n          errorOptions = _fallbackQuestion2.options;\n        }\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [{\n            id: Date.now(),\n            text: errorMessage,\n            sender: 'bot',\n            isQuestion: true,\n            options: errorOptions\n          }]);\n        });\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleQuickResponse(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleGoogleLogin = function handleGoogleLogin() {\n    console.log('Google login clicked');\n  };\n  var handleGoogleSignIn = function () {\n    var _ref6 = _asyncToGenerator(function* (userData) {\n      if (!(userData != null && userData.uid)) {\n        console.error('Invalid user data received:', userData);\n        return;\n      }\n      console.log('Starting Google sign in process...', userData);\n      try {\n        setUser(userData);\n        console.log('User set:', userData);\n        var code;\n        try {\n          code = yield generateReferralCode(userData.uid);\n          console.log('Generated referral code:', code);\n        } catch (error) {\n          console.error('Failed to generate referral code:', error);\n          code = generateUniqueCode();\n          console.log('Using temporary code:', code);\n        }\n        setReferralCode(code);\n        setShowLoginPrompt(false);\n        setShowRefModal(true);\n        console.log('Updated state:', {\n          user: userData,\n          referralCode: code,\n          showLoginPrompt: false,\n          showRefModal: true\n        });\n      } catch (error) {\n        console.error('Error in sign-in process:', error);\n        setUser(null);\n        setShowLoginPrompt(false);\n        alert('Sign-in process failed. Please try again later. ' + 'If the problem persists, please contact support.');\n      }\n    });\n    return function handleGoogleSignIn(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleSkipSignIn = function handleSkipSignIn() {\n    setShowLoginPrompt(false);\n    console.log('User skipped sign in');\n  };\n  var handleExit = function handleExit() {\n    setShowExitConfirm(true);\n  };\n  var handleExitWithReferral = function handleExitWithReferral() {\n    console.log('Exiting with referral code:', referralCode);\n    setShowExitConfirm(true);\n  };\n  var handleConfirmExit = function handleConfirmExit() {\n    console.log('Confirmed exit, navigating to homepage');\n    setShowRefModal(false);\n    setShowExitConfirm(false);\n    setMessages([]);\n    setInput('');\n    window.location.href = '/';\n  };\n  var handleCancelExit = function handleCancelExit() {\n    console.log('Cancelled exit');\n    setShowExitConfirm(false);\n  };\n  var renderReferralModal = function renderReferralModal() {\n    if (referralCode && (user != null && user.uid || showRefModal)) {\n      console.log('Rendering referral code interface:', {\n        user: user || 'no user',\n        referralCode: referralCode || 'no code',\n        userExists: !!user,\n        codeExists: !!referralCode,\n        showRefModal: showRefModal,\n        showRefOffer: showRefOffer\n      });\n      return _jsxs(View, {\n        style: styles.modalOverlay,\n        children: [_jsxs(View, {\n          style: styles.referralContainer,\n          children: [_jsx(Text, {\n            style: styles.referralTitle,\n            children: \"Congratulations! \\uD83C\\uDF89\"\n          }), _jsxs(View, {\n            style: styles.referralCodeBox,\n            children: [_jsx(Text, {\n              style: styles.referralCodeLabel,\n              children: \"Your Referral Code:\"\n            }), _jsxs(TouchableOpacity, {\n              style: styles.copyContainer,\n              onPress: function onPress() {\n                navigator.clipboard.writeText(referralCode);\n                var element = document.getElementById('copyFeedback');\n                if (element) {\n                  element.style.opacity = '1';\n                  setTimeout(function () {\n                    element.style.opacity = '0';\n                  }, 2000);\n                }\n              },\n              children: [_jsx(Text, {\n                style: styles.referralCodeText,\n                children: referralCode\n              }), _jsx(View, {\n                style: styles.copyButton,\n                children: _jsx(Text, {\n                  style: styles.copyIcon,\n                  children: \"\\uD83D\\uDCCB\"\n                })\n              })]\n            }), _jsx(Text, {\n              id: \"copyFeedback\",\n              style: styles.copyFeedback,\n              children: \"Copied to clipboard!\"\n            }), _jsx(Text, {\n              style: styles.referralExpiry,\n              children: \"Valid for 48 hours\"\n            })]\n          }), _jsx(Text, {\n            style: styles.referralMessage,\n            children: \"Share this code with friends to give them access to our AI assistant!\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.exitButton,\n            onPress: handleExitWithReferral,\n            children: _jsx(Text, {\n              style: styles.exitButtonText,\n              children: \"Return to Home\"\n            })\n          })]\n        }), showExitConfirm && _jsxs(View, {\n          style: styles.confirmModal,\n          children: [_jsx(Text, {\n            style: styles.confirmTitle,\n            children: \"Are you sure?\"\n          }), _jsx(Text, {\n            style: styles.confirmText,\n            children: \"Make sure you've saved your referral code before leaving.\"\n          }), _jsxs(View, {\n            style: styles.confirmButtons,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.confirmButton, styles.cancelButton],\n              onPress: handleCancelExit,\n              children: _jsx(Text, {\n                style: [styles.confirmButtonText, {\n                  color: colors.text.primary\n                }],\n                children: \"Back\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.confirmButton, styles.confirmExitButton],\n              onPress: handleConfirmExit,\n              children: _jsx(Text, {\n                style: styles.confirmButtonText,\n                children: \"Yes, Exit\"\n              })\n            })]\n          })]\n        })]\n      });\n    }\n    return null;\n  };\n  useEffect(function () {\n    console.log('Render state:', {\n      user: !!user,\n      referralCode: !!referralCode,\n      showLoginPrompt: showLoginPrompt,\n      questionCount: questionCount\n    });\n  }, [user, referralCode, showLoginPrompt, questionCount]);\n  useEffect(function () {\n    console.log('Referral display conditions updated:', {\n      user: user == null ? void 0 : user.uid,\n      referralCode: referralCode,\n      showRefModal: showRefModal,\n      showRefOffer: showRefOffer,\n      shouldShow: (user == null ? void 0 : user.uid) && referralCode || showRefModal && referralCode\n    });\n  }, [user, referralCode, showRefModal, showRefOffer]);\n  useEffect(function () {\n    if (user != null && user.uid && !referralCode && !showRefModal) {\n      console.log('User signed in but no referral code yet, generating...');\n      generateReferralCode(user.uid).then(function (code) {\n        console.log('Generated referral code after state check:', code);\n        setReferralCode(code);\n        setShowRefModal(true);\n      }).catch(function (error) {\n        console.error('Failed to generate referral code:', error);\n        alert('Failed to generate referral code. Please try again.');\n      });\n    }\n  }, [user, referralCode, showRefModal]);\n  useEffect(function () {\n    if (error) {\n      console.error('ChatUI error:', error);\n      alert('An error occurred. Please try again.');\n      setError(null);\n    }\n  }, [error]);\n  var handleError = function handleError(error) {\n    console.error('Handling error:', error);\n    setError(error);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [error && _jsx(View, {\n      style: styles.errorBanner,\n      children: _jsx(Text, {\n        style: styles.errorText,\n        children: \"An error occurred. Please try again.\"\n      })\n    }), isDev && _jsx(View, {\n      style: styles.devBanner,\n      children: _jsx(Text, {\n        style: styles.devBannerText,\n        children: \"Development Mode\"\n      })\n    }), _jsx(FlatList, {\n      ref: listRef,\n      style: styles.messageList,\n      data: messages,\n      renderItem: function renderItem(_ref7) {\n        var item = _ref7.item;\n        return _jsxs(View, {\n          style: [styles.message, item.sender === 'user' ? styles.userMessage : styles.botMessage, item.isQuestion && styles.questionMessage, item.isReferralCode && styles.referralMessage],\n          children: [_jsx(Text, {\n            style: [styles.messageText, item.sender === 'user' ? styles.userMessageText : styles.botMessageText, item.isQuestion && styles.questionText, item.isReferralCode && styles.referralText],\n            children: item.text\n          }), item.options && item.sender === 'bot' && _jsx(View, {\n            style: styles.optionsContainer,\n            children: item.options.map(function (option, index) {\n              return _jsx(TouchableOpacity, {\n                style: styles.optionButton,\n                onPress: function onPress() {\n                  return handleQuickResponse(option);\n                },\n                disabled: loading,\n                children: _jsx(Text, {\n                  style: styles.optionText,\n                  children: option\n                })\n              }, index);\n            })\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      onContentSizeChange: function onContentSizeChange() {\n        var _listRef$current;\n        return (_listRef$current = listRef.current) == null ? void 0 : _listRef$current.scrollToEnd();\n      }\n    }), showLoginPrompt && _jsx(GoogleSignIn, {\n      onSignIn: handleGoogleSignIn,\n      onClose: handleSkipSignIn\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: input,\n        onChangeText: setInput,\n        placeholder: \"Type a message...\",\n        placeholderTextColor: colors.text.tertiary,\n        onSubmitEditing: handleSendMessage,\n        editable: !loading\n      }), loading && _jsx(ActivityIndicator, {\n        style: styles.loader,\n        color: colors.primary\n      })]\n    }), referralCode && ((user == null ? void 0 : user.uid) || showRefModal) && _jsx(View, {\n      style: [styles.modalOverlay, showExitConfirm && {\n        pointerEvents: 'none'\n      }],\n      children: _jsxs(View, {\n        style: styles.referralContainer,\n        children: [_jsx(Text, {\n          style: styles.referralTitle,\n          children: \"Congratulations! \\uD83C\\uDF89\"\n        }), _jsxs(View, {\n          style: styles.referralCodeBox,\n          children: [_jsx(Text, {\n            style: styles.referralCodeLabel,\n            children: \"Your Referral Code:\"\n          }), _jsxs(TouchableOpacity, {\n            style: styles.copyContainer,\n            onPress: function onPress() {\n              navigator.clipboard.writeText(referralCode);\n              var element = document.getElementById('copyFeedback');\n              if (element) {\n                element.style.opacity = '1';\n                setTimeout(function () {\n                  element.style.opacity = '0';\n                }, 2000);\n              }\n            },\n            children: [_jsx(Text, {\n              style: styles.referralCodeText,\n              children: referralCode\n            }), _jsx(View, {\n              style: styles.copyButton,\n              children: _jsx(Text, {\n                style: styles.copyIcon,\n                children: \"\\uD83D\\uDCCB\"\n              })\n            })]\n          }), _jsx(Text, {\n            id: \"copyFeedback\",\n            style: styles.copyFeedback,\n            children: \"Copied to clipboard!\"\n          }), _jsx(Text, {\n            style: styles.referralExpiry,\n            children: \"Valid for 48 hours\"\n          })]\n        }), _jsx(Text, {\n          style: styles.referralMessage,\n          children: \"Share this code with friends to give them access to our AI assistant!\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.exitButton,\n          onPress: handleExitWithReferral,\n          children: _jsx(Text, {\n            style: styles.exitButtonText,\n            children: \"Return to Home\"\n          })\n        })]\n      })\n    }), showExitConfirm && _jsx(View, {\n      style: styles.confirmOverlay,\n      children: _jsxs(View, {\n        style: styles.confirmModal,\n        children: [_jsx(Text, {\n          style: styles.confirmTitle,\n          children: \"Are you sure?\"\n        }), _jsx(Text, {\n          style: styles.confirmText,\n          children: \"Make sure you've saved your referral code before leaving.\"\n        }), _jsxs(View, {\n          style: styles.confirmButtons,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.confirmButton, styles.cancelButton],\n            onPress: handleCancelExit,\n            children: _jsx(Text, {\n              style: [styles.confirmButtonText, {\n                color: colors.text.primary\n              }],\n              children: \"Back\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.confirmButton, styles.confirmExitButton],\n            onPress: handleConfirmExit,\n            children: _jsx(Text, {\n              style: styles.confirmButtonText,\n              children: \"Yes, Exit\"\n            })\n          })]\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  message: {\n    margin: 10,\n    padding: 10,\n    borderRadius: 20,\n    maxWidth: '80%'\n  },\n  userMessage: {\n    backgroundColor: colors.chatBubble.user,\n    alignSelf: 'flex-end',\n    marginLeft: '20%'\n  },\n  botMessage: {\n    backgroundColor: colors.chatBubble.bot,\n    alignSelf: 'flex-start',\n    marginRight: '20%',\n    borderWidth: 1,\n    borderColor: colors.background.tertiary\n  },\n  messageText: {\n    fontSize: 16,\n    lineHeight: 20\n  },\n  userMessageText: {\n    color: colors.text.inverse\n  },\n  botMessageText: {\n    color: colors.text.secondary\n  },\n  inputContainer: {\n    padding: 10,\n    borderTopWidth: 1,\n    borderTopColor: colors.background.tertiary,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    backgroundColor: colors.background.secondary,\n    padding: 12,\n    borderRadius: 20,\n    fontSize: 16,\n    color: colors.text.primary\n  },\n  loader: {\n    marginLeft: 10\n  },\n  devBanner: {\n    backgroundColor: colors.background.tertiary,\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  devBannerText: {\n    color: colors.text.secondary,\n    fontWeight: 'bold'\n  },\n  questionMessage: {\n    backgroundColor: colors.chatBubble.system,\n    borderWidth: 1,\n    borderColor: colors.info\n  },\n  questionText: {\n    fontWeight: '500',\n    color: colors.text.secondary\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n    marginTop: 10,\n    gap: 8\n  },\n  optionButton: {\n    backgroundColor: colors.background.secondary,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 16,\n    borderWidth: 1,\n    borderColor: colors.primary\n  },\n  optionText: {\n    color: colors.text.primary,\n    fontSize: 14\n  },\n  loginPrompt: {\n    backgroundColor: colors.background.secondary,\n    padding: 16,\n    margin: 16,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  loginText: {\n    color: colors.text.primary,\n    marginBottom: 12,\n    textAlign: 'center'\n  },\n  googleButton: {\n    backgroundColor: '#4285F4',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 4\n  },\n  googleButtonText: {\n    color: colors.text.inverse,\n    fontWeight: 'bold'\n  },\n  messageList: {\n    flex: 1,\n    width: '100%',\n    overflow: 'auto'\n  },\n  referralMessage: {\n    backgroundColor: colors.success,\n    borderWidth: 0,\n    padding: 20\n  },\n  referralText: {\n    color: colors.text.inverse,\n    fontSize: 16,\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  referralContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n    backgroundColor: colors.background.primary,\n    zIndex: 1001\n  },\n  referralTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    marginBottom: 32,\n    textAlign: 'center',\n    textShadow: `0 0 10px ${colors.primary}40`\n  },\n  referralCodeBox: {\n    backgroundColor: colors.background.tertiary,\n    padding: 24,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: colors.info,\n    marginBottom: 24,\n    width: '100%',\n    maxWidth: 400,\n    boxShadow: `0 0 20px ${colors.primary}40`\n  },\n  referralCodeLabel: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    marginBottom: 12\n  },\n  referralCodeText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    letterSpacing: 2,\n    marginRight: 12\n  },\n  copyContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 8,\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    ':hover': {\n      backgroundColor: colors.background.primary\n    }\n  },\n  copyButton: {\n    padding: 8,\n    borderRadius: 4,\n    backgroundColor: colors.background.tertiary\n  },\n  copyIcon: {\n    fontSize: 20\n  },\n  copyFeedback: {\n    color: colors.success,\n    fontSize: 14,\n    textAlign: 'center',\n    marginBottom: 12,\n    opacity: 0,\n    transition: 'opacity 0.2s ease'\n  },\n  referralExpiry: {\n    fontSize: 14,\n    color: colors.text.tertiary,\n    textAlign: 'center'\n  },\n  referralMessage: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    textAlign: 'center',\n    marginBottom: 32,\n    maxWidth: 400,\n    lineHeight: 24\n  },\n  exitButton: {\n    backgroundColor: colors.background.secondary,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: colors.primary\n  },\n  exitButtonText: {\n    color: colors.primary,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  confirmOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1002\n  },\n  confirmModal: {\n    backgroundColor: colors.background.primary,\n    padding: 24,\n    borderRadius: 12,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1003\n  },\n  confirmTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    marginBottom: 16\n  },\n  confirmText: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    marginBottom: 24\n  },\n  confirmButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12\n  },\n  confirmButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6\n  },\n  cancelButton: {\n    backgroundColor: colors.background.secondary\n  },\n  confirmExitButton: {\n    backgroundColor: colors.primary\n  },\n  confirmButtonText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: colors.text.inverse\n  },\n  errorBanner: {\n    backgroundColor: colors.error,\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  errorText: {\n    color: colors.text.inverse,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","TextInput","StyleSheet","TouchableOpacity","FlatList","ActivityIndicator","colors","sendMessage","GoogleSignIn","generateReferralCode","generateUniqueCode","FALLBACK_QUESTIONS","jsx","_jsx","jsxs","_jsxs","ChatUI","_ref","questionsBeforeLogin","showRefOffer","console","log","isDev","process","env","NODE_ENV","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","input","setInput","_useState5","_useState6","loading","setLoading","_useState7","_useState8","connectionError","setConnectionError","_useState9","_useState10","questionCount","setQuestionCount","_useState11","_useState12","showLoginPrompt","setShowLoginPrompt","_useState13","_useState14","user","setUser","_useState15","_useState16","showExitConfirm","setShowExitConfirm","_useState17","_useState18","referralCode","setReferralCode","_useState19","_useState20","showRefModal","setShowRefModal","listRef","usedQuestionIndicesRef","Set","_useState21","_useState22","error","setError","current","getRandomFallbackQuestion","Array","from","size","length","randomIndex","Math","floor","random","has","add","generateInitialReferral","_ref2","_asyncToGenerator","tempUserId","Date","now","code","apply","arguments","_objectSpread","uid","LOGIN_PROMPT_THRESHOLD","initialQuestion","welcomeMessage","id","text","sender","isQuestion","options","checkConnection","_ref3","response","fetch","ok","Error","interval","setInterval","clearInterval","handleSendMessage","_ref4","trim","userMessage","prev","concat","_toConsumableArray","result","fallbackQuestion","botMessage","includes","newCount","errorMessage","message","handleQuickResponse","_ref5","errorOptions","_x","handleGoogleLogin","handleGoogleSignIn","_ref6","userData","alert","_x2","handleSkipSignIn","handleExit","handleExitWithReferral","handleConfirmExit","window","location","href","handleCancelExit","renderReferralModal","userExists","codeExists","style","styles","modalOverlay","children","referralContainer","referralTitle","referralCodeBox","referralCodeLabel","copyContainer","onPress","navigator","clipboard","writeText","element","document","getElementById","opacity","setTimeout","referralCodeText","copyButton","copyIcon","copyFeedback","referralExpiry","referralMessage","exitButton","exitButtonText","confirmModal","confirmTitle","confirmText","confirmButtons","confirmButton","cancelButton","confirmButtonText","color","primary","confirmExitButton","shouldShow","then","catch","handleError","container","errorBanner","errorText","devBanner","devBannerText","ref","messageList","data","renderItem","_ref7","item","questionMessage","isReferralCode","messageText","userMessageText","botMessageText","questionText","referralText","optionsContainer","map","option","index","optionButton","disabled","optionText","keyExtractor","toString","onContentSizeChange","_listRef$current","scrollToEnd","onSignIn","onClose","inputContainer","value","onChangeText","placeholder","placeholderTextColor","tertiary","onSubmitEditing","editable","loader","pointerEvents","confirmOverlay","create","flex","backgroundColor","background","height","display","flexDirection","margin","padding","borderRadius","maxWidth","chatBubble","alignSelf","marginLeft","bot","marginRight","borderWidth","borderColor","fontSize","lineHeight","inverse","secondary","borderTopWidth","borderTopColor","alignItems","justifyContent","fontWeight","system","info","flexWrap","marginTop","gap","paddingHorizontal","paddingVertical","loginPrompt","loginText","marginBottom","textAlign","googleButton","googleButtonText","width","overflow","success","zIndex","textShadow","boxShadow","letterSpacing","cursor","transition","position","top","left","right","bottom"],"sources":["/Users/almorris/cursor-test/frontend/src/components/Chat/ChatUI.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, FlatList, ActivityIndicator } from 'react-native';\nimport { colors } from '../../utils/colors';\nimport { sendMessage } from '../../services/ai';\nimport GoogleSignIn from '../Auth/GoogleSignIn';\nimport { generateReferralCode, generateUniqueCode } from '../../utils/referralUtils';\nimport { FALLBACK_QUESTIONS } from '../../utils/chatQuestions';\n\nexport default function ChatUI({ questionsBeforeLogin, showRefOffer }) {\n  console.log('ChatUI initialized with:', { questionsBeforeLogin, showRefOffer });\n  const isDev = process.env.NODE_ENV === 'development';\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [connectionError, setConnectionError] = useState(false);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [showLoginPrompt, setShowLoginPrompt] = useState(false);\n  const [user, setUser] = useState(null);\n  const [showExitConfirm, setShowExitConfirm] = useState(false);\n  const [referralCode, setReferralCode] = useState(null);\n  const [showRefModal, setShowRefModal] = useState(false);\n  const listRef = useRef(null);\n  const usedQuestionIndicesRef = useRef(new Set());\n  const [error, setError] = useState(null);\n\n  // Cleanup used questions on unmount\n  useEffect(() => {\n    return () => {\n      usedQuestionIndicesRef.current = new Set();\n    };\n  }, []);\n\n  const getRandomFallbackQuestion = () => {\n    console.log('Getting random question. Used indices:', \n      Array.from(usedQuestionIndicesRef.current));\n    \n    // If all questions have been used, reset the tracking\n    if (usedQuestionIndicesRef.current.size >= FALLBACK_QUESTIONS.length) {\n      console.log('All questions used, resetting tracking');\n      usedQuestionIndicesRef.current = new Set();\n    }\n    \n    // Get an unused random question\n    let randomIndex;\n    do {\n      randomIndex = Math.floor(Math.random() * FALLBACK_QUESTIONS.length);\n    } while (usedQuestionIndicesRef.current.has(randomIndex));\n    \n    console.log('Selected question index:', randomIndex);\n    usedQuestionIndicesRef.current.add(randomIndex);\n    \n    return FALLBACK_QUESTIONS[randomIndex];\n  };\n\n  // If showRefOffer is true, show the referral code interface immediately\n  useEffect(() => {\n    console.log('Processing showRefOffer:', showRefOffer);\n    if (showRefOffer) {\n      const generateInitialReferral = async () => {\n        try {\n          const tempUserId = 'temp-' + Date.now();\n          const code = await generateReferralCode(tempUserId);\n          console.log('Generated initial referral code:', code);\n          setReferralCode(code);\n          setShowRefModal(true);\n        } catch (error) {\n          console.error('Error generating initial referral code:', error);\n        }\n      };\n      generateInitialReferral();\n    }\n  }, [showRefOffer]);\n\n  // Debug logging for state changes\n  useEffect(() => {\n    console.log('State updated:', {\n      user: user ? { ...user, uid: user.uid } : null,\n      referralCode,\n      showLoginPrompt,\n      questionCount,\n      showExitConfirm,\n      showRefModal\n    });\n  }, [user, referralCode, showLoginPrompt, questionCount, showExitConfirm, showRefModal]);\n\n  // Configure when to show login prompt based on environment and URL params\n  const LOGIN_PROMPT_THRESHOLD = isDev ? \n    (questionsBeforeLogin || 5) : \n    5;\n\n  useEffect(() => {\n    const initialQuestion = getRandomFallbackQuestion();\n    const welcomeMessage = {\n      id: Date.now(),\n      text: `Welcome! I'm here to help you achieve your goals. ${initialQuestion.text}`,\n      sender: 'bot',\n      isQuestion: true,\n      options: initialQuestion.options\n    };\n    setMessages([welcomeMessage]);\n  }, []);\n\n  useEffect(() => {\n    if (isDev) {\n      console.log('Development mode: Chat initialized');\n    }\n  }, []);\n\n  // Watch question count and show login prompt at threshold\n  useEffect(() => {\n    if (questionCount >= LOGIN_PROMPT_THRESHOLD && !showLoginPrompt && !user) {\n      console.log(`Showing login prompt after ${questionCount} questions`);\n      setShowLoginPrompt(true);\n    }\n  }, [questionCount, showLoginPrompt, user]);\n\n  useEffect(() => {\n    // Check backend connection\n    const checkConnection = async () => {\n      try {\n        const response = await fetch('http://localhost:4000/api/health');\n        if (!response.ok) throw new Error('Backend unavailable');\n        setConnectionError(false);\n      } catch (error) {\n        console.error('Connection check failed:', error);\n        setConnectionError(true);\n      }\n    };\n    \n    checkConnection();\n    const interval = setInterval(checkConnection, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleSendMessage = async () => {\n    if (!input.trim() || loading) return;\n    \n    try {\n      if (connectionError) {\n        throw new Error('Cannot connect to chat service');\n      }\n\n      setLoading(true);\n      const userMessage = { id: Date.now(), text: input, sender: 'user' };\n      setMessages(prev => [...prev, userMessage]);\n      setInput('');\n      \n      const result = await sendMessage(input);\n      \n      // Handle various error cases\n      if (!result) {\n        throw new Error('No response received from server');\n      }\n      \n      if (!result.text && !result.options) {\n        const fallbackQuestion = getRandomFallbackQuestion();\n        result.text = fallbackQuestion.text;\n        result.options = fallbackQuestion.options;\n      }\n      \n      const botMessage = {\n        id: Date.now(),\n        text: result.text || \"I'm having trouble understanding. Could you rephrase that?\",\n        sender: 'bot',\n        isQuestion: typeof result.text === 'string' && \n          (result.text.includes('?') || result.text.includes(\"I'd like to understand\")),\n        options: result.options || []\n      };\n      \n      setMessages(prev => [...prev, botMessage]);\n      \n      // Increment question count if this was a question\n      if (botMessage.isQuestion) {\n        const newCount = questionCount + 1;\n        setQuestionCount(newCount);\n      }\n    } catch (error) {\n      console.error('Chat error:', error);\n      const fallbackQuestion = getRandomFallbackQuestion();\n      console.log('Using fallback question:', fallbackQuestion);\n      \n      let errorMessage;\n      if (connectionError) {\n        errorMessage = 'Cannot connect to chat service. Please check your connection.';\n      } else if (error.message.includes('Empty response') || error.message.includes('No response')) {\n        errorMessage = fallbackQuestion.text;\n      } else {\n        errorMessage = `I apologize for the confusion. ${fallbackQuestion.text}`;\n      }\n      \n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        text: errorMessage,\n        sender: 'bot',\n        isQuestion: true,\n        options: fallbackQuestion.options\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleQuickResponse = async (response) => {\n    if (loading) return;\n    \n    try {\n      setLoading(true);\n      const userMessage = { id: Date.now(), text: response, sender: 'user' };\n      setMessages(prev => [...prev, userMessage]);\n      \n      const result = await sendMessage(response);\n      \n      // Handle various error cases\n      if (!result) {\n        throw new Error('No response received from server');\n      }\n      \n      if (!result.text && !result.options) {\n        const fallbackQuestion = getRandomFallbackQuestion();\n        result.text = fallbackQuestion.text;\n        result.options = fallbackQuestion.options;\n      }\n      \n      const botMessage = {\n        id: Date.now(),\n        text: result.text || \"I understand. Tell me more about that.\",\n        sender: 'bot',\n        isQuestion: typeof result.text === 'string' && \n          (result.text.includes('?') || result.text.includes(\"I'd like to understand\")),\n        options: result.options || []\n      };\n      \n      setMessages(prev => [...prev, botMessage]);\n      \n      // Increment question count and check for login prompt\n      if (botMessage.isQuestion) {\n        const newCount = questionCount + 1;\n        setQuestionCount(newCount);\n      }\n    } catch (error) {\n      console.error('Quick response error:', error);\n      // Handle specific error types with engaging fallback questions\n      let errorMessage;\n      let errorOptions;\n      const fallbackQuestion = getRandomFallbackQuestion();\n      \n      if (connectionError) {\n        errorMessage = 'Cannot connect to chat service. Please check your connection.';\n        errorOptions = [];\n      } else if (error.message.includes('Empty response') || error.message.includes('No response')) {\n        errorMessage = fallbackQuestion.text;\n        errorOptions = fallbackQuestion.options;\n      } else {\n        errorMessage = `That's an interesting perspective. ${fallbackQuestion.text}`;\n        errorOptions = fallbackQuestion.options;\n      }\n      \n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        text: errorMessage,\n        sender: 'bot',\n        isQuestion: true,\n        options: errorOptions\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGoogleLogin = () => {\n    // TODO: Implement Google OAuth\n    console.log('Google login clicked');\n  };\n\n  const handleGoogleSignIn = async (userData) => {\n    if (!userData?.uid) {\n      console.error('Invalid user data received:', userData);\n      return;\n    }\n\n    console.log('Starting Google sign in process...', userData);\n    \n    try {\n      // First set the user to ensure we have the uid\n      setUser(userData);\n      console.log('User set:', userData);\n      \n      // Generate and show referral code\n      let code;\n      try {\n        code = await generateReferralCode(userData.uid);\n        console.log('Generated referral code:', code);\n      } catch (error) {\n        console.error('Failed to generate referral code:', error);\n        code = generateUniqueCode();\n        console.log('Using temporary code:', code);\n      }\n      \n      setReferralCode(code);\n      setShowLoginPrompt(false);\n      setShowRefModal(true);\n      \n      console.log('Updated state:', {\n        user: userData,\n        referralCode: code,\n        showLoginPrompt: false,\n        showRefModal: true\n      });\n    } catch (error) {\n      console.error('Error in sign-in process:', error);\n      setUser(null);\n      setShowLoginPrompt(false);\n      alert(\n        'Sign-in process failed. Please try again later. ' +\n        'If the problem persists, please contact support.'\n      );\n    }\n  };\n\n  const handleSkipSignIn = () => {\n    setShowLoginPrompt(false);\n    console.log('User skipped sign in');\n  };\n\n  const handleExit = () => {\n    setShowExitConfirm(true);\n  };\n\n  const handleExitWithReferral = () => {\n    console.log('Exiting with referral code:', referralCode);\n    setShowExitConfirm(true);\n  };\n\n  const handleConfirmExit = () => {\n    console.log('Confirmed exit, navigating to homepage');\n    // Reset states\n    setShowRefModal(false);\n    setShowExitConfirm(false);\n    setMessages([]);\n    setInput('');\n    // Navigate to root/landing page\n    window.location.href = '/';\n  };\n\n  const handleCancelExit = () => {\n    console.log('Cancelled exit');\n    setShowExitConfirm(false);\n  };\n\n  const renderReferralModal = () => {\n    if (referralCode && (user?.uid || showRefModal)) {\n      console.log('Rendering referral code interface:', { \n        user: user || 'no user', \n        referralCode: referralCode || 'no code',\n        userExists: !!user,\n        codeExists: !!referralCode,\n        showRefModal,\n        showRefOffer\n      });\n      return (\n        <View style={styles.modalOverlay}>\n          <View style={styles.referralContainer}>\n            <Text style={styles.referralTitle}>\n              Congratulations! 🎉\n            </Text>\n            <View style={styles.referralCodeBox}>\n              <Text style={styles.referralCodeLabel}>\n                Your Referral Code:\n              </Text>\n              <TouchableOpacity \n                style={styles.copyContainer}\n                onPress={() => {\n                  navigator.clipboard.writeText(referralCode);\n                  // Show temporary feedback\n                  const element = document.getElementById('copyFeedback');\n                  if (element) {\n                    element.style.opacity = '1';\n                    setTimeout(() => {\n                      element.style.opacity = '0';\n                    }, 2000);\n                  }\n                }}\n              >\n                <Text style={styles.referralCodeText}>\n                  {referralCode}\n                </Text>\n                <View style={styles.copyButton}>\n                  <Text style={styles.copyIcon}>📋</Text>\n                </View>\n              </TouchableOpacity>\n              <Text id=\"copyFeedback\" style={styles.copyFeedback}>\n                Copied to clipboard!\n              </Text>\n              <Text style={styles.referralExpiry}>\n                Valid for 48 hours\n              </Text>\n            </View>\n            <Text style={styles.referralMessage}>\n              Share this code with friends to give them access to our AI assistant!\n            </Text>\n            <TouchableOpacity\n              style={styles.exitButton}\n              onPress={handleExitWithReferral}\n            >\n              <Text style={styles.exitButtonText}>\n                Return to Home\n              </Text>\n            </TouchableOpacity>\n          </View>\n          \n          {showExitConfirm && (\n            <View style={styles.confirmModal}>\n              <Text style={styles.confirmTitle}>\n                Are you sure?\n              </Text>\n              <Text style={styles.confirmText}>\n                Make sure you've saved your referral code before leaving.\n              </Text>\n              <View style={styles.confirmButtons}>\n                <TouchableOpacity \n                  style={[styles.confirmButton, styles.cancelButton]}\n                  onPress={handleCancelExit}\n                >\n                  <Text style={[styles.confirmButtonText, { color: colors.text.primary }]}>\n                    Back\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity \n                  style={[styles.confirmButton, styles.confirmExitButton]}\n                  onPress={handleConfirmExit}\n                >\n                  <Text style={styles.confirmButtonText}>\n                    Yes, Exit\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      );\n    }\n    return null;\n  };\n\n  // Add debug logging for render conditions\n  useEffect(() => {\n    console.log('Render state:', {\n      user: !!user,\n      referralCode: !!referralCode,\n      showLoginPrompt,\n      questionCount\n    });\n  }, [user, referralCode, showLoginPrompt, questionCount]);\n\n  useEffect(() => {\n    console.log('Referral display conditions updated:', {\n      user: user?.uid,\n      referralCode,\n      showRefModal,\n      showRefOffer,\n      shouldShow: (user?.uid && referralCode) || (showRefModal && referralCode)\n    });\n  }, [user, referralCode, showRefModal, showRefOffer]);\n\n  // Monitor state transitions for referral display\n  useEffect(() => {\n    if (user?.uid && !referralCode && !showRefModal) {\n      console.log('User signed in but no referral code yet, generating...');\n      generateReferralCode(user.uid)\n        .then(code => {\n          console.log('Generated referral code after state check:', code);\n          setReferralCode(code);\n          setShowRefModal(true);\n        })\n        .catch(error => {\n          console.error('Failed to generate referral code:', error);\n          alert('Failed to generate referral code. Please try again.');\n        });\n    }\n  }, [user, referralCode, showRefModal]);\n\n  useEffect(() => {\n    if (error) {\n      console.error('ChatUI error:', error);\n      alert('An error occurred. Please try again.');\n      setError(null);\n    }\n  }, [error]);\n\n  const handleError = (error) => {\n    console.error('Handling error:', error);\n    setError(error);\n  };\n\n  return (\n    <View style={styles.container}>\n      {error && (\n        <View style={styles.errorBanner}>\n          <Text style={styles.errorText}>\n            An error occurred. Please try again.\n          </Text>\n        </View>\n      )}\n      {isDev && (\n        <View style={styles.devBanner}>\n          <Text style={styles.devBannerText}>\n            Development Mode\n          </Text>\n        </View>\n      )}\n      <FlatList\n        ref={listRef}\n        style={styles.messageList}\n        data={messages}\n        renderItem={({ item }) => (\n          <View style={[\n            styles.message,\n            item.sender === 'user' ? styles.userMessage : styles.botMessage,\n            item.isQuestion && styles.questionMessage,\n            item.isReferralCode && styles.referralMessage\n          ]}>\n            <Text style={[\n              styles.messageText,\n              item.sender === 'user' ? styles.userMessageText : styles.botMessageText,\n              item.isQuestion && styles.questionText,\n              item.isReferralCode && styles.referralText\n            ]}>\n              {item.text}\n            </Text>\n            {item.options && item.sender === 'bot' && (\n              <View style={styles.optionsContainer}>\n                {item.options.map((option, index) => (\n                  <TouchableOpacity\n                    key={index}\n                    style={styles.optionButton}\n                    onPress={() => handleQuickResponse(option)}\n                    disabled={loading}\n                  >\n                    <Text style={styles.optionText}>{option}</Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            )}\n          </View>\n        )}\n        keyExtractor={item => item.id.toString()}\n        onContentSizeChange={() => listRef.current?.scrollToEnd()}\n      />\n      \n      {showLoginPrompt && (\n        <GoogleSignIn\n          onSignIn={handleGoogleSignIn}\n          onClose={handleSkipSignIn}\n        />\n      )}\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.input}\n          value={input}\n          onChangeText={setInput}\n          placeholder=\"Type a message...\"\n          placeholderTextColor={colors.text.tertiary}\n          onSubmitEditing={handleSendMessage}\n          editable={!loading}\n        />\n        {loading && (\n          <ActivityIndicator \n            style={styles.loader} \n            color={colors.primary} \n          />\n        )}\n      </View>\n\n      {referralCode && (user?.uid || showRefModal) && (\n        <View style={[styles.modalOverlay, showExitConfirm && { pointerEvents: 'none' }]}>\n          <View style={styles.referralContainer}>\n            <Text style={styles.referralTitle}>\n              Congratulations! 🎉\n            </Text>\n            <View style={styles.referralCodeBox}>\n              <Text style={styles.referralCodeLabel}>\n                Your Referral Code:\n              </Text>\n              <TouchableOpacity \n                style={styles.copyContainer}\n                onPress={() => {\n                  navigator.clipboard.writeText(referralCode);\n                  // Show temporary feedback\n                  const element = document.getElementById('copyFeedback');\n                  if (element) {\n                    element.style.opacity = '1';\n                    setTimeout(() => {\n                      element.style.opacity = '0';\n                    }, 2000);\n                  }\n                }}\n              >\n                <Text style={styles.referralCodeText}>\n                  {referralCode}\n                </Text>\n                <View style={styles.copyButton}>\n                  <Text style={styles.copyIcon}>📋</Text>\n                </View>\n              </TouchableOpacity>\n              <Text id=\"copyFeedback\" style={styles.copyFeedback}>\n                Copied to clipboard!\n              </Text>\n              <Text style={styles.referralExpiry}>\n                Valid for 48 hours\n              </Text>\n            </View>\n            <Text style={styles.referralMessage}>\n              Share this code with friends to give them access to our AI assistant!\n            </Text>\n            <TouchableOpacity\n              style={styles.exitButton}\n              onPress={handleExitWithReferral}\n            >\n              <Text style={styles.exitButtonText}>\n                Return to Home\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      )}\n\n      {showExitConfirm && (\n        <View style={styles.confirmOverlay}>\n          <View style={styles.confirmModal}>\n            <Text style={styles.confirmTitle}>\n              Are you sure?\n            </Text>\n            <Text style={styles.confirmText}>\n              Make sure you've saved your referral code before leaving.\n            </Text>\n            <View style={styles.confirmButtons}>\n              <TouchableOpacity \n                style={[styles.confirmButton, styles.cancelButton]}\n                onPress={handleCancelExit}\n              >\n                <Text style={[styles.confirmButtonText, { color: colors.text.primary }]}>\n                  Back\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity \n                style={[styles.confirmButton, styles.confirmExitButton]}\n                onPress={handleConfirmExit}\n              >\n                <Text style={styles.confirmButtonText}>\n                  Yes, Exit\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  message: {\n    margin: 10,\n    padding: 10,\n    borderRadius: 20,\n    maxWidth: '80%'\n  },\n  userMessage: {\n    backgroundColor: colors.chatBubble.user,\n    alignSelf: 'flex-end',\n    marginLeft: '20%'\n  },\n  botMessage: {\n    backgroundColor: colors.chatBubble.bot,\n    alignSelf: 'flex-start',\n    marginRight: '20%',\n    borderWidth: 1,\n    borderColor: colors.background.tertiary\n  },\n  messageText: {\n    fontSize: 16,\n    lineHeight: 20\n  },\n  userMessageText: {\n    color: colors.text.inverse\n  },\n  botMessageText: {\n    color: colors.text.secondary\n  },\n  inputContainer: {\n    padding: 10,\n    borderTopWidth: 1,\n    borderTopColor: colors.background.tertiary,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    backgroundColor: colors.background.secondary,\n    padding: 12,\n    borderRadius: 20,\n    fontSize: 16,\n    color: colors.text.primary\n  },\n  loader: {\n    marginLeft: 10\n  },\n  devBanner: {\n    backgroundColor: colors.background.tertiary,\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  devBannerText: {\n    color: colors.text.secondary,\n    fontWeight: 'bold'\n  },\n  questionMessage: {\n    backgroundColor: colors.chatBubble.system,\n    borderWidth: 1,\n    borderColor: colors.info\n  },\n  questionText: {\n    fontWeight: '500',\n    color: colors.text.secondary\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n    marginTop: 10,\n    gap: 8\n  },\n  optionButton: {\n    backgroundColor: colors.background.secondary,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 16,\n    borderWidth: 1,\n    borderColor: colors.primary\n  },\n  optionText: {\n    color: colors.text.primary,\n    fontSize: 14\n  },\n  loginPrompt: {\n    backgroundColor: colors.background.secondary,\n    padding: 16,\n    margin: 16,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  loginText: {\n    color: colors.text.primary,\n    marginBottom: 12,\n    textAlign: 'center'\n  },\n  googleButton: {\n    backgroundColor: '#4285F4',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 4\n  },\n  googleButtonText: {\n    color: colors.text.inverse,\n    fontWeight: 'bold'\n  },\n  messageList: {\n    flex: 1,\n    width: '100%',\n    overflow: 'auto'\n  },\n  referralMessage: {\n    backgroundColor: colors.success,\n    borderWidth: 0,\n    padding: 20\n  },\n  referralText: {\n    color: colors.text.inverse,\n    fontSize: 16,\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  referralContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n    backgroundColor: colors.background.primary,\n    zIndex: 1001\n  },\n  referralTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    marginBottom: 32,\n    textAlign: 'center',\n    textShadow: `0 0 10px ${colors.primary}40`\n  },\n  referralCodeBox: {\n    backgroundColor: colors.background.tertiary,\n    padding: 24,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: colors.info,\n    marginBottom: 24,\n    width: '100%',\n    maxWidth: 400,\n    boxShadow: `0 0 20px ${colors.primary}40`\n  },\n  referralCodeLabel: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    marginBottom: 12\n  },\n  referralCodeText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    letterSpacing: 2,\n    marginRight: 12\n  },\n  copyContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.background.secondary,\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 8,\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    ':hover': {\n      backgroundColor: colors.background.primary\n    }\n  },\n  copyButton: {\n    padding: 8,\n    borderRadius: 4,\n    backgroundColor: colors.background.tertiary\n  },\n  copyIcon: {\n    fontSize: 20\n  },\n  copyFeedback: {\n    color: colors.success,\n    fontSize: 14,\n    textAlign: 'center',\n    marginBottom: 12,\n    opacity: 0,\n    transition: 'opacity 0.2s ease'\n  },\n  referralExpiry: {\n    fontSize: 14,\n    color: colors.text.tertiary,\n    textAlign: 'center'\n  },\n  referralMessage: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    textAlign: 'center',\n    marginBottom: 32,\n    maxWidth: 400,\n    lineHeight: 24\n  },\n  exitButton: {\n    backgroundColor: colors.background.secondary,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: colors.primary\n  },\n  exitButtonText: {\n    color: colors.primary,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  confirmOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1002\n  },\n  confirmModal: {\n    backgroundColor: colors.background.primary,\n    padding: 24,\n    borderRadius: 12,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1003\n  },\n  confirmTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    marginBottom: 16\n  },\n  confirmText: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    marginBottom: 24\n  },\n  confirmButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12\n  },\n  confirmButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6\n  },\n  cancelButton: {\n    backgroundColor: colors.background.secondary\n  },\n  confirmExitButton: {\n    backgroundColor: colors.primary\n  },\n  confirmButtonText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: colors.text.inverse\n  },\n  errorBanner: {\n    backgroundColor: colors.error,\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  errorText: {\n    color: colors.text.inverse,\n    fontWeight: 'bold'\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}