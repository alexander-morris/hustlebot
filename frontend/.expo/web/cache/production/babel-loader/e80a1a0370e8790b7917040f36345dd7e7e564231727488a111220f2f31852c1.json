{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";export var getInviteFromURL=function getInviteFromURL(){try{if(typeof window==='undefined')return null;var urlParams=new URLSearchParams(window.location.search);var inviteCode=urlParams.get('invite')||urlParams.get('ref');if(!inviteCode&&window.location.hash){var hashParams=new URLSearchParams(window.location.hash.substring(1));inviteCode=hashParams.get('invite')||hashParams.get('ref');}if(inviteCode){inviteCode=inviteCode.trim().toUpperCase();}console.log('Found invite code in URL:',inviteCode);return inviteCode;}catch(error){console.error('Error parsing URL parameters:',error);return null;}};export var clearInviteFromURL=function clearInviteFromURL(){try{if(typeof window==='undefined')return;var url=new URL(window.location.href);url.searchParams.delete('invite');url.searchParams.delete('ref');window.history.replaceState({},'',url.toString());}catch(error){console.error('Error clearing URL parameters:',error);}};export var getUrlParams=function getUrlParams(){var params=new URLSearchParams(window.location.search);var refOffer=params.get('refOffer')==='1';console.log('URL Params:',{ref:params.get('ref'),questions:params.get('q'),refOffer:refOffer,rawRefOffer:params.get('refOffer')});return{ref:params.get('ref'),questions:parseInt(params.get('q'))||null,refOffer:params.get('refOffer')==='1'};};export var isValidReferralCode=function(){var _ref=_asyncToGenerator(function*(code){if(!code||code.length<14)return false;try{var db=getFirestore();var codesRef=collection(db,'referralCodes');var q=query(codesRef,where('code','==',code));var snapshot=yield getDocs(q);if(snapshot.empty)return false;var referral=snapshot.docs[0].data();var now=new Date();if(referral.used||referral.expiresAt.toDate()<now){return false;}return true;}catch(error){console.error('Error validating referral code:',error);return false;}});return function isValidReferralCode(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["getInviteFromURL","window","urlParams","URLSearchParams","location","search","inviteCode","get","hash","hashParams","substring","trim","toUpperCase","console","log","error","clearInviteFromURL","url","URL","href","searchParams","delete","history","replaceState","toString","getUrlParams","params","refOffer","ref","questions","rawRefOffer","parseInt","isValidReferralCode","_ref","_asyncToGenerator","code","length","db","getFirestore","codesRef","collection","q","query","where","snapshot","getDocs","empty","referral","docs","data","now","Date","used","expiresAt","toDate","_x","apply","arguments"],"sources":["/Users/almorris/cursor-test/frontend/src/utils/urlUtils.js"],"sourcesContent":["export const getInviteFromURL = () => {\n  try {\n    // Check if we're in a web environment\n    if (typeof window === 'undefined') return null;\n\n    const urlParams = new URLSearchParams(window.location.search);\n    let inviteCode = urlParams.get('invite') || urlParams.get('ref');\n    \n    // Also check for hash parameters\n    if (!inviteCode && window.location.hash) {\n      const hashParams = new URLSearchParams(window.location.hash.substring(1));\n      inviteCode = hashParams.get('invite') || hashParams.get('ref');\n    }\n    \n    // Clean up the invite code\n    if (inviteCode) {\n      inviteCode = inviteCode.trim().toUpperCase();\n    }\n    \n    console.log('Found invite code in URL:', inviteCode); // Debug log\n    return inviteCode;\n  } catch (error) {\n    console.error('Error parsing URL parameters:', error);\n    return null;\n  }\n};\n\nexport const clearInviteFromURL = () => {\n  try {\n    if (typeof window === 'undefined') return;\n\n    const url = new URL(window.location.href);\n    url.searchParams.delete('invite');\n    url.searchParams.delete('ref');\n    \n    // Update URL without refreshing the page\n    window.history.replaceState({}, '', url.toString());\n  } catch (error) {\n    console.error('Error clearing URL parameters:', error);\n  }\n};\n\nexport const getUrlParams = () => {\n  const params = new URLSearchParams(window.location.search);\n  const refOffer = params.get('refOffer') === '1';\n  console.log('URL Params:', {\n    ref: params.get('ref'),\n    questions: params.get('q'),\n    refOffer,\n    rawRefOffer: params.get('refOffer')\n  });\n  return {\n    ref: params.get('ref'),\n    questions: parseInt(params.get('q')) || null,\n    refOffer: params.get('refOffer') === '1'\n  };\n};\n\nexport const isValidReferralCode = async (code) => {\n  if (!code || code.length < 14) return false; // XXXX-XXXX-XXXX format\n  \n  try {\n    const db = getFirestore();\n    const codesRef = collection(db, 'referralCodes');\n    const q = query(codesRef, where('code', '==', code));\n    const snapshot = await getDocs(q);\n    \n    if (snapshot.empty) return false;\n    \n    const referral = snapshot.docs[0].data();\n    const now = new Date();\n    \n    // Check if code is expired or used\n    if (referral.used || referral.expiresAt.toDate() < now) {\n      return false;\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Error validating referral code:', error);\n    return false;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}